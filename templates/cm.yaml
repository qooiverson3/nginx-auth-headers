apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ngx-lua.fullname" . }}-config
  labels:
    {{- include "ngx-lua.labels" . | nindent 4 }}
data:
  nginx.conf: |
    worker_processes  1;
    events {
      worker_connections  1024;
    }
    http {
        lua_shared_dict secrets 10m;

        init_by_lua_block {
            -- Load the secret from the environment variable
            local secret_value = os.getenv("HEADER_SECRET_VALUE")
            if secret_value then
                ngx.shared.secrets:set("header_value", secret_value)
            end
        }

        server {
            listen 80;

            location / {
                access_by_lua_block {
                    local header_value = ngx.req.get_headers()["X-Custom-Header"]
                    local expected_value = ngx.shared.secrets:get("header_value")

                    if header_value ~= expected_value then
                        return ngx.exit(ngx.HTTP_FORBIDDEN)
                    end
                }

                proxy_pass https://www.google.com.tw;
            }
        }
    }
